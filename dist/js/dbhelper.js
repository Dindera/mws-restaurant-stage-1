class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(t){const e=idb.open("restaurant-db",4,function(t){t.objectStoreNames.contains("restaurant-store")||t.createObjectStore("restaurant-store",{keyPath:"id"})});function r(){e.then(t=>t.transaction("restaurant-store").objectStore("restaurant-store").getAll()).then(e=>t(null,e))}fetch(DBHelper.DATABASE_URL).then(function(t){return t.json()}).then(t=>(e.then(e=>{const r=e.transaction("restaurant-store","readwrite"),a=r.objectStore("restaurant-store");for(const e of t)a.put(e);return r.complete}).then(()=>{console.log("restaurants added")}),t)).then(function(e){return t(null,e)}).catch(()=>r())}static fetchRestaurantById(t,e){DBHelper.fetchRestaurants((r,a)=>{if(r)e(r,null);else{const r=a.find(e=>e.id==t);r?e(null,r):e("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(t,e){DBHelper.fetchRestaurants((r,a)=>{if(r)e(r,null);else{const r=a.filter(e=>e.cuisine_type==t);e(null,r)}})}static fetchRestaurantByNeighborhood(t,e){DBHelper.fetchRestaurants((r,a)=>{if(r)e(r,null);else{const r=a.filter(e=>e.neighborhood==t);e(null,r)}})}static fetchRestaurantByCuisineAndNeighborhood(t,e,r){DBHelper.fetchRestaurants((a,n)=>{if(a)r(a,null);else{let a=n;"all"!=t&&(a=a.filter(e=>e.cuisine_type==t)),"all"!=e&&(a=a.filter(t=>t.neighborhood==e)),r(null,a)}})}static fetchNeighborhoods(t){DBHelper.fetchRestaurants((e,r)=>{if(e)t(e,null);else{const e=r.map((t,e)=>r[e].neighborhood),a=e.filter((t,r)=>e.indexOf(t)==r);t(null,a)}})}static fetchCuisines(t){DBHelper.fetchRestaurants((e,r)=>{if(e)t(e,null);else{const e=r.map((t,e)=>r[e].cuisine_type),a=e.filter((t,r)=>e.indexOf(t)==r);t(null,a)}})}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static imageUrlForRestaurant(t){return`/src/img/${t.id}-300_small.jpg`}static imageSrcsetForIndex(t){return`src/images/${t.id}-300_small.jpg 1x, src/images/${t.id}-600_medium_2x.jpg 2x`}static imageSrcsetForRestaurant(t){return`src/images/${t.id}-300_small.jpg 300w, src/images/${t.id}-600_medium_2x.jpg 600w, src/images/${t.id}-800_large_2x.jpg 800w`}static mapMarkerForRestaurant(t,e){const r=new L.marker([t.latlng.lat,t.latlng.lng],{title:t.name,alt:t.name,url:DBHelper.urlForRestaurant(t)});return r.addTo(newMap),r}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
